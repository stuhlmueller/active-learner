// Generative model for states

var movies = [
  "Rocky Horror Picture Show",
  "Black Swan",
  "101 Dalmatians",
  "Sound of Music",
  "Serenity",
];

var shuffle = function(xs) {
  if (xs.length === 0) {
    return [];
  } else {
    var x = uniformDraw(xs);
    return append([x], shuffle(_.without(xs, x)));
  }
};

var statePrior = function() {
  return shuffle(movies);
};


// Questions

var inFirstHalf = function(xs, x) {
  return _.indexOf(xs, x) <= xs.length/2;
};


var sampleMovie =  function(){
  return uniformDraw(movies);
};


var questionTypes = {
  
  // "Is #1 a good movie?": yesNoMaybeQuestion({
  //   sampleQuestionData: function() {
  //     return [sampleMovie()];
  //   },
  //   sampleAnswer: function(state, data) {
  //     return inFirstHalf(state, data[0]);
  //   }
  // }),
  
  // "Is #1 the best movie?": yesNoMaybeQuestion({
  //   sampleQuestionData: function() {
  //     return [sampleMovie()];
  //   },    
  //   sampleAnswer: function(state, data){
  //     return data[0] === state[0];
  //   }
  // }),
  
  // "Is #1 the worst movie?": yesNoMaybeQuestion({
  //   sampleQuestionData: function() {
  //     return [sampleMovie()];
  //   },
  //   sampleAnswer: function(state, data){
  //     return data[0] === state[state.length-1];
  //   }
  // }),
  
  "Is #1 a better movie than #2?": yesNoMaybeQuestion({
    sampleQuestionData: function() {
      return [sampleMovie(), sampleMovie()];
    },    
    sampleAnswer: function(state, data){
      return _.indexOf(state, data[0]) < _.indexOf(state, data[1]);
    }
  })
};


var domain = {
  questionTypes: questionTypes,
  statePrior: statePrior
};
